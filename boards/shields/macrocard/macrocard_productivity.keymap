#include <behaviors/smart_toggle.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/outputs.h>

/ {
    behaviors {
        // Window switcher behavior using smart toggle
        win_switch: win_switch {
            compatible = "zmk,behavior-smart-toggle";
            #binding-cells = <0>;
            bindings = <&kp LALT>, <&kp TAB>;
            ignored-key-positions = <3>; // Encoder switch position
        };
        
        // Tab switcher behavior using smart toggle
        tab_switch: tab_switch {
            compatible = "zmk,behavior-smart-toggle";
            #binding-cells = <0>;
            bindings = <&kp LCTRL>, <&kp TAB>;
            ignored-key-positions = <3>; // Encoder switch position
        };
        
        // Macro behavior for encoder switch - tap for toggle off, hold for BT clear
        enc_macro: enc_macro {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&macro_press &kp ENTER,
                       <&macro_tap &bt BT_CLR>,
                       <&macro_release &kp ENTER>;
            tap-ms = <30>;
            wait-ms = <40>;
        };
        // Window switcher encoder behavior
        win_enc: win_enc {
            compatible = "zmk,behavior-sensor-rotate";
            #sensor-binding-cells = <0>;
            bindings = <&win_switch>, <&kp LS(TAB)>;
        };
        
        // Tab switcher encoder behavior
        tab_enc: tab_enc {
            compatible = "zmk,behavior-sensor-rotate";
            #sensor-binding-cells = <0>;
            bindings = <&tab_switch>, <&kp LS(TAB)>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
                &mo 1           // Switch 1 - Window switcher layer
                &mo 2           // Switch 2 - Tab switcher layer  
                &mo 3           // Switch 3 - Zoom layer
                &enc_macro      // Encoder switch - hold for BT clear
            >;
            
            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN>;
        };

        window_layer {
            bindings = <
                &trans          // Switch 1 - transparent
                &trans          // Switch 2 - transparent
                &trans          // Switch 3 - transparent
                &win_switch     // Encoder switch - toggle alt off
            >;
            
            sensor-bindings = <&win_enc>;
        };

        tab_layer {
            bindings = <
                &trans          // Switch 1 - transparent
                &trans          // Switch 2 - transparent
                &trans          // Switch 3 - transparent
                &tab_switch     // Encoder switch - toggle ctrl off
            >;
            
            sensor-bindings = <&tab_enc>;
        };

        zoom_layer {
            bindings = <
                &trans          // Switch 1 - transparent
                &trans          // Switch 2 - transparent
                &trans          // Switch 3 - transparent
                &enc_ht 0 0     // Encoder switch - hold for BT clear
            >;
            
            sensor-bindings = <&inc_dec_kp LC(EQUAL) LC(MINUS)>;
        };
    };
};